"use strict";
Array.prototype.includes ||
  (Array.prototype.includes = function (e, t) {
    "use strict";
    if (e instanceof RegExp)
      throw TypeError("first argument must not be a RegExp");
    return t === void 0 && (t = 0), this.indexOf(e, t) !== -1;
  });
function forEach(e, t) {
  for (var n = 0; n < e.length; n++) t(e[n], n);
}
function find(e, t) {
  for (var n = 0; n < e.length; n++) if (t(e[n])) return e[n];
  return null;
}
if (!Object.values) {
  var reduce = Function.bind.call(Function.call, Array.prototype.reduce),
    isEnumerable = Function.bind.call(
      Function.call,
      Object.prototype.propertyIsEnumerable
    ),
    concat = Function.bind.call(Function.call, Array.prototype.concat),
    keys = function (t) {
      return Object.getOwnPropertyNames(t);
    };
  Object.values = function (t) {
    return reduce(
      keys(t),
      function (e, n) {
        return concat(
          e,
          typeof n == "string" && isEnumerable(t, n) ? [t[n]] : []
        );
      },
      []
    );
  };
}
